{
  "meta": {
    "project": "Ecommerce Platform Backend",
    "date": "2025-10-29",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "A comprehensive backend system for an ecommerce platform providing user authentication, product management, shopping cart, order processing, discount coupons, user address management, and featured content management.",
  "core_goals": [
    "Provide secure user authentication and authorization.",
    "Manage product catalog with CRUD operations.",
    "Support shopping cart functionality for users.",
    "Enable order creation and tracking.",
    "Manage discount coupons for promotions.",
    "Handle user addresses for shipping.",
    "Manage featured banners and products on the platform."
  ],
  "key_features": [
    "JWT-based user authentication and authorization API.",
    "Product management API with create and retrieve operations.",
    "Shopping cart API to add and fetch cart items.",
    "Order API for order creation and retrieval.",
    "Coupon API to create and list discount coupons.",
    "User address API to add and get addresses.",
    "Settings API to add, fetch, and delete feature banners and update featured products."
  ],
  "user_flow_summary": [
    "User registers and logs in using the authentication API obtaining JWT tokens for secure access.",
    "Users browse products fetched from the products API.",
    "Users add products to their cart through the cart API.",
    "Users place orders via the order API using items from their cart.",
    "Users apply coupons managed via the coupon API during checkout.",
    "Users add or select shipping addresses using the address API.",
    "Admins manage promotional banners and featured products via the settings API."
  ],
  "validation_criteria": [
    "Authentication system issues valid JWT tokens and restricts access to authorized users only.",
    "Products API correctly handles product creation and retrieval.",
    "Cart API accurately reflects user cart contents.",
    "Order API creates new orders and retrieves order history properly.",
    "Coupon API manages coupons with correct creation and listing.",
    "Address API correctly adds and fetches user addresses.",
    "Settings API successfully manages media uploads, banner deletion and featured product updates."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Node.js",
      "Express.js",
      "Next.js",
      "React",
      "Prisma",
      "PostgreSQL",
      "Cloudinary",
      "Zustand"
    ],
    "features": [
      {
        "name": "Authentication API",
        "description": "User authentication and authorization system with JWT tokens",
        "files": [
          "server/src/routes/authRoutes.ts",
          "server/src/controllers/authController.ts",
          "server/src/middleware/authMiddleware.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/auth/login": {
              "post": {
                "summary": "User login",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Settings API",
        "description": "Manage feature banners and featured products for the ecommerce platform",
        "files": [
          "server/src/routes/settingRoutes.ts",
          "server/src/controllers/settingsController.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/settings/banners": {
              "post": {
                "summary": "Add feature banners",
                "requestBody": {
                  "content": {
                    "multipart/form-data": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "binary"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/settings/banners/{id}": {
              "delete": {
                "summary": "Delete a feature banner",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ]
              }
            },
            "/api/settings/get-banners": {
              "get": {
                "summary": "Fetch all feature banners"
              }
            },
            "/api/settings/update-feature-products": {
              "post": {
                "summary": "Update featured products",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "productIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/settings/fetch-feature-products": {
              "get": {
                "summary": "Fetch featured products"
              }
            }
          }
        }
      },
      {
        "name": "Products API",
        "description": "Product management system for ecommerce platform",
        "files": [
          "server/src/routes/productRoutes.ts",
          "server/src/controllers/productController.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/products": {
              "get": {
                "summary": "Get all products"
              },
              "post": {
                "summary": "Create a new product"
              }
            }
          }
        }
      },
      {
        "name": "Cart API",
        "description": "Shopping cart management system",
        "files": [
          "server/src/routes/cartRoutes.ts",
          "server/src/controllers/cartController.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/cart": {
              "get": {
                "summary": "Get user cart"
              },
              "post": {
                "summary": "Add item to cart"
              }
            }
          }
        }
      },
      {
        "name": "Order API",
        "description": "Order management and processing system",
        "files": [
          "server/src/routes/orderRoutes.ts",
          "server/src/controllers/orderController.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/order": {
              "get": {
                "summary": "Get user orders"
              },
              "post": {
                "summary": "Create new order"
              }
            }
          }
        }
      },
      {
        "name": "Coupon API",
        "description": "Discount coupon management system",
        "files": [
          "server/src/routes/couponRoutes.ts",
          "server/src/controllers/couponController.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/coupon": {
              "get": {
                "summary": "Get available coupons"
              },
              "post": {
                "summary": "Create new coupon"
              }
            }
          }
        }
      },
      {
        "name": "Address API",
        "description": "User address management system",
        "files": [
          "server/src/routes/addressRoutes.ts",
          "server/src/controllers/addressController.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/address": {
              "get": {
                "summary": "Get user addresses"
              },
              "post": {
                "summary": "Add new address"
              }
            }
          }
        }
      }
    ]
  }
}
